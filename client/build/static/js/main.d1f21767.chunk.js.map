{"version":3,"sources":["components/compose.component.js","components/home.component.js","components/login.component.js","components/register.component.js","components/DrumNote.js","components/DrumKit.js","components/simpleSlider.js","components/RadioButtonsGroup.js","components/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["drumRnn","drumPlayer","home","react_default","a","createElement","Component","login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login_name","login_password","login_completed","onChangeLoginname","bind","assertThisInitialized","onChangePassword","onSubmit","e","setState","target","value","preventDefault","pw","console","log","style","marginTop","className","type","onChange","Register","DrumNote","handleClick","bgColor","toggle","clickCallback","pitch","QTS","QTE","role","aria-label","onClick","data-toggle","backgroundColor","React","DrumKit","handleNoteClick","msg","toggleState","testCallback","drum1","components_DrumNote","drum2","drum3","drum4","SimpleSlider","handleChange","event","tempChange","temperatureCallback","classes","root","Typography_default","id","Slider_default","container","slider","aria-labelledby","withStyles","width","padding","RadioButtonsGroup","radioCallback","FormControl_default","component","formControl","FormLabel_default","RadioGroup_default","name","group","FormControlLabel_default","control","Radio_default","label","theme","display","margin","spacing","unit","concat","Dashboard","handleSlider","handleRadio","sliderCallback","tempCallback","changeMeasure","measureCallback","TempSlide","simpleSlider","Radio","components_RadioButtonsGroup","noteSet","Set","temperature","measures","buildNoteSequence","parsed","notes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","JSON","parse","push","err","return","quantizationInfo","stepsPerQuarter","tempos","time","qpm","totalQuantizedSteps","_callee","regenerator_default","wrap","_context","prev","mag","initialize","stop","compose","testSound","changeTemperature","changeMeasures","noteJson","add","has","delete","drumSequence","quantizedStartStep","quantizedEndStep","isDrum","start","midi","rnnPlayer","continueSequence","then","sample","initRnn","drumNotes","drumkit1","components_DrumKit","drumkit2","drumkit3","drumkit4","drumkit5","drumkit6","drumkit7","drumkit8","dash","dashboard","testNoteSequence","jaiGenerate","App","BrowserRouter","Style","Link","to","Route","path","exact","Login","Compose","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1f21767.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as mag from \"@magenta/music\";\r\nimport DrumKit from \"./DrumKit\";\r\nimport Dashboard from \"./dashboard\";\r\n\r\n//create the sequence that we need. \"input midi\"\r\nvar drumRnn;\r\nvar drumPlayer;\r\nvar noteSet = new Set();\r\nvar temperature = 0.5;\r\nvar measures = 2;\r\n\r\n//when this is called, the active notes will be put into an array and constructed into a note sequence for the Rnn player.\r\nfunction buildNoteSequence()\r\n{\r\n    var notes = [];\r\n    var parsed;\r\n\r\n    for (let item of noteSet)\r\n    {\r\n        parsed = JSON.parse(item);\r\n        notes.push(parsed);\r\n    };\r\n\r\n    const drumSeq = {\r\n        notes,\r\n        quantizationInfo: {stepsPerQuarter: 4},\r\n        tempos: [{time: 0, qpm: 120}],\r\n        totalQuantizedSteps: 8\r\n    };\r\n\r\n    return drumSeq;\r\n}\r\n\r\n\r\nasync function initRnn()\r\n{\r\n\t//google's RNN, eventually we will use JAI's rnn from the backend.\r\n    drumRnn = new mag.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/drum_kit_rnn');\r\n    // Initialize the model.\r\n    await drumRnn.initialize();\r\n}\r\n\r\nexport default class compose extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //bind this function because we're gonna pass it to the individual buttons\r\n        this.testSound = this.testSound.bind(this);\r\n        this.changeTemperature = this.changeTemperature.bind(this);\r\n        this.changeMeasures = this.changeMeasures.bind(this);\r\n    }\r\n\r\n    //tests the sound of the drumkit button that is pressed.\r\n    testSound(e, msg, pitch, QTS, QTE, toggleState) {\r\n        e.preventDefault();\r\n\r\n        //the button has been pressed on if this is received as false, and it will go into our set which our user will submit to jai\r\n        if (toggleState === false) {\r\n            var noteJson = '{ \"pitch\" : ' + pitch + ',\"isDrum\" : ' + true + ', \"quantizedStartStep\" : ' + QTS + ',\"quantizedEndStep\" : ' + QTE + '}';\r\n\r\n            noteSet.add(noteJson);\r\n            console.log(noteSet.has(noteJson));\r\n        }\r\n        //if the user toggles this off we need to purge what they entered before.\r\n        else {\r\n            //delete the string of the note that got untoggled.\r\n            var noteJson = '{ \"pitch\" : ' + pitch + ',\"isDrum\" : ' + true + ', \"quantizedStartStep\" : ' + QTS + ',\"quantizedEndStep\" : ' + QTE + '}';\r\n            noteSet.delete(noteJson);\r\n        }\r\n\r\n        //0 to 1 QTS to QTE because we just want to test the sound when the button is clicked.\r\n        var drumSequence = {\r\n            notes: [\r\n                {pitch: pitch, quantizedStartStep: 0, quantizedEndStep: 1, isDrum: true},\r\n            ],\r\n            quantizationInfo: {stepsPerQuarter: 4},\r\n            tempos: [{time: 0, qpm: 120}],\r\n            totalQuantizedSteps: 1\r\n        };\r\n\r\n        drumPlayer.start(drumSequence);\r\n    }\r\n\r\n    //playback currently selected notes in order.\r\n    testNoteSequence() {\r\n        const drumSequence = buildNoteSequence();\r\n        drumPlayer.start(drumSequence);\r\n        const midi = mag.sequenceProtoToMidi(drumSequence);\r\n        console.log(midi);\r\n    }\r\n\r\n    jaiGenerate(e) {\r\n        e.preventDefault();\r\n        const drumSequence = buildNoteSequence();\r\n        const rnnPlayer = new mag.Player();\r\n        drumRnn.continueSequence(drumSequence, (16 * measures), temperature).then((sample) => rnnPlayer.start(sample));\r\n    }\r\n\r\n    //callback function for temp slider.\r\n    changeTemperature(e, value) {\r\n        e.preventDefault();\r\n        temperature = (value / 60);\r\n    }\r\n\r\n    changeMeasures(e, value)\r\n    {\r\n        e.preventDefault();\r\n        measures = value;\r\n    }\r\n\r\n        render() {\r\n\r\n        initRnn();\r\n        drumPlayer = new mag.Player();\r\n\r\n            //in theory this comes from the DB.\r\n            const drumNotes =\r\n                {\r\n                    notes: [\r\n                        { pitch: 41},\r\n                        { pitch: 42},\r\n                        { pitch: 43},\r\n                        { pitch: 44},\r\n                        { pitch: 45},\r\n                        { pitch: 46},\r\n                        { pitch: 47},\r\n                        { pitch: 48},\r\n                    ]\r\n                };\r\n\r\n        //then we put them into the button element.\r\n        const drumkit1 = <DrumKit pitch={drumNotes.notes[0].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit2 = <DrumKit pitch={drumNotes.notes[1].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit3 = <DrumKit pitch={drumNotes.notes[2].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit4 = <DrumKit pitch={drumNotes.notes[3].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit5 = <DrumKit pitch={drumNotes.notes[4].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit6 = <DrumKit pitch={drumNotes.notes[5].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit7 = <DrumKit pitch={drumNotes.notes[6].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit8 = <DrumKit pitch={drumNotes.notes[7].pitch} testCallback ={this.testSound}/>;\r\n\r\n        const dash = <Dashboard tempCallback ={this.changeTemperature} measureCallback ={this.changeMeasures}/>;\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit1}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit2}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit3}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit4}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit5}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit6}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit7}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit8}\r\n                </div>\r\n                <p>Let's make some music!</p>\r\n                <div>{dash}</div>\r\n                <button onClick={this.testNoteSequence}>test sequence</button>\r\n                <button onClick={this.jaiGenerate}>Jai generate</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class home extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <p>Welcome to the home component!</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class login extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state =\r\n        {\r\n            login_name: '',\r\n            login_password:'',\r\n            login_completed:false\r\n        }\r\n\r\n        this.onChangeLoginname = this.onChangeLoginname.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n\r\n    }\r\n\r\n    onChangeLoginname(e) {\r\n        this.setState({\r\n            login_name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            login_password: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        var pw = this.state.login_password;\r\n        var login = this.state.login_name;\r\n\r\n        console.log(\"login was\" + login);\r\n        console.log(\"pw was\" + pw);\r\n\r\n        this.setState({\r\n\r\n                    login_name: '',\r\n                    login_password:''\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Login</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Login name</label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.login_name}\r\n                                onChange={this.onChangeLoginname}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.login_password}\r\n                            onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Welcome to register component!</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nclass DrumNote extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick= this.handleClick.bind(this);\r\n        this.state = {bgColor: '#1C1616', toggle: false};\r\n    }\r\n\r\n    handleClick(e)\r\n    {\r\n        e.preventDefault();\r\n        const clickCallback = this.props.clickCallback;\r\n\r\n        //tickity toggle these buttons so we know which drums the users have chosen.\r\n        if(!this.state.toggle)\r\n        {\r\n            this.setState({bgColor: '#4482BE', toggle: true});\r\n        }\r\n        else\r\n        {\r\n            this.setState({bgColor: '#1C1616', toggle: false});\r\n        }\r\n\r\n        clickCallback(e,\"Reporting for duty sir!\",this.props.pitch, this.props.QTS, this.props.QTE, this.state.toggle);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"btn-group mr-2 mb-2\" role=\"group\" aria-label=\"First group\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleClick} data-toggle=\"button\" style={{backgroundColor:this.state.bgColor}}>drum pitch: {this.props.pitch}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumNote;","import React from 'react';\r\nimport DrumNote from './DrumNote';\r\n\r\nclass DrumKit extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //bind this function because we're gonna pass it to the individual buttons\r\n        this.handleNoteClick= this.handleNoteClick.bind(this);\r\n    }\r\n\r\n    handleNoteClick(e,msg, pitch, QTS, QTE, toggleState)\r\n    {\r\n        e.preventDefault();\r\n        const testCallback = this.props.testCallback;\r\n        testCallback(e,msg,pitch,QTS,QTE, toggleState);\r\n    }\r\n\r\n    render() {\r\n\r\n        const drum1 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {0} QTE = {1}/>;\r\n        const drum2 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {2} QTE = {3}/>;\r\n        const drum3 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {4} QTE = {5}/>;\r\n        const drum4 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {6} QTE = {7}/>;\r\n\r\n\r\n        return(\r\n            <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                {drum1}\r\n                {drum2}\r\n                {drum3}\r\n                {drum4}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumKit;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\nconst styles = {\r\n    root: {\r\n        width: 300,\r\n    },\r\n    slider: {\r\n        padding: '22px 0px',\r\n    },\r\n};\r\n\r\nclass SimpleSlider extends React.Component {\r\n    state = {\r\n        value: 0.5,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n        const tempChange = this.props.temperatureCallback;\r\n       tempChange(event, value);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography id=\"label\">Temperature:</Typography>\r\n                <Slider\r\n                    classes={{ container: classes.slider }}\r\n                    value={value}\r\n                    aria-labelledby=\"label\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSimpleSlider.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleSlider);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit * 3,\r\n    },\r\n    group: {\r\n        margin: `${theme.spacing.unit}px 0`,\r\n    },\r\n});\r\n\r\nclass RadioButtonsGroup extends React.Component {\r\n    state = {\r\n        value: '2',\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ value: event.target.value });\r\n        const radioCallback = this.props.radioCallback;\r\n        radioCallback(event,event.target.value);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                    <FormLabel component=\"legend\">Generation playback length:</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"Gender\"\r\n                        name=\"gender1\"\r\n                        className={classes.group}\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <FormControlLabel value='2' control={<Radio />} label=\"2 Measures\" />\r\n                        <FormControlLabel value='4' control={<Radio />} label=\"4 Measures\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRadioButtonsGroup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RadioButtonsGroup);","import React from 'react';\r\nimport Slider from './simpleSlider';\r\nimport RadioButtonGroup from './RadioButtonsGroup';\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSlider = this.handleSlider.bind(this);\r\n        this.handleRadio = this.handleRadio.bind(this);\r\n    }\r\n\r\n    handleSlider(e, value)\r\n    {\r\n        e.preventDefault();\r\n        const sliderCallback = this.props.tempCallback;\r\n        sliderCallback(e, value);\r\n    }\r\n\r\n    handleRadio(e,value)\r\n    {\r\n        e.preventDefault();\r\n        const changeMeasure = this.props.measureCallback;\r\n        changeMeasure(e,value);\r\n    }\r\n\r\n    render() {\r\n\r\n        const TempSlide = <Slider temperatureCallback = {this.handleSlider}/>;\r\n        const Radio = <RadioButtonGroup radioCallback = {this.handleRadio}/>;\r\n        return(\r\n                <div>\r\n                    <div>{TempSlide}</div>\r\n                    <div>{Radio}</div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\nimport home from \"./components/home.component\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Compose from \"./components/compose.component\";\r\nimport * as mag from '@magenta/music';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n      \r\n  \t\r\n    return (\r\n        <Router>\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\" Style=\"background-color: #1C1616\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                    </Link>\r\n                    <div className=\"collpase navbar-collapse\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/login\" className=\"nav-link\" Style=\"color: #4482BE\">Login</Link>\r\n                            </li>\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/register\" className=\"nav-link\" Style=\"color: #4482BE\">Register</Link>\r\n                            </li>\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/compose\" className=\"nav-link\" Style=\"color: #4482BE\">Compose</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <br/>\r\n                <Route path=\"/\" exact component={home} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/register\" component={Register} />\r\n                <Route path=\"/compose\" component={Compose} />\r\n            </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
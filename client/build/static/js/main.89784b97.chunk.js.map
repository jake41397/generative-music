{"version":3,"sources":["components/compose.component.js","components/home.component.js","components/login.component.js","utils/storage.js","components/register.component.js","components/DrumNote.js","components/DrumKit.js","components/simpleSlider.js","components/RadioButtonsGroup.js","components/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["drumRnn","drumPlayer","home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Style","Component","login","login_name","login_password","login_completed","token","signInError","onChangeLoginname","bind","assertThisInitialized","onChangePassword","onSubmit","e","setState","target","value","_this2","preventDefault","email","password","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","success","key","obj","console","error","localStorage","setItem","err","setInStorage","window","appComponent","message","isLoading","componentDidMount","render","history","push","style","marginTop","type","onChange","Register","signUpError","onChangeEmail","DrumNote","handleClick","bgColor","toggle","clickCallback","pitch","QTS","QTE","role","aria-label","onClick","data-toggle","backgroundColor","React","DrumKit","handleNoteClick","msg","toggleState","testCallback","drum1","components_DrumNote","drum2","drum3","drum4","SimpleSlider","handleChange","event","tempChange","temperatureCallback","classes","root","Typography_default","id","Slider_default","container","slider","aria-labelledby","withStyles","width","padding","RadioButtonsGroup","radioCallback","FormControl_default","component","formControl","FormLabel_default","RadioGroup_default","name","group","FormControlLabel_default","control","Radio_default","label","theme","display","margin","spacing","unit","concat","Dashboard","handleSlider","handleRadio","sliderCallback","tempCallback","changeMeasure","measureCallback","TempSlide","simpleSlider","Radio","components_RadioButtonsGroup","noteSet","Set","temperature","measures","buildNoteSequence","parsed","notes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","parse","return","quantizationInfo","stepsPerQuarter","tempos","time","qpm","totalQuantizedSteps","_callee","regenerator_default","wrap","_context","prev","mag","initialize","stop","compose","testSound","changeTemperature","changeMeasures","noteJson","add","log","has","drumSequence","quantizedStartStep","quantizedEndStep","isDrum","start","delete","midi","rnnPlayer","continueSequence","sample","initRnn","drumNotes","drumkit1","components_DrumKit","drumkit2","drumkit3","drumkit4","drumkit5","drumkit6","drumkit7","drumkit8","dash","dashboard","testNoteSequence","jaiGenerate","App","masterError","logout","valueStr","getItem","getFromStorage","_this$state","loggedInItems","class","href","signInAndUpItems","Link","to","BrowserRouter","height","src","location","origin","alt","Route","path","exact","Login","Compose","Boolean","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89784b97.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as mag from \"@magenta/music\";\r\nimport DrumKit from \"./DrumKit\";\r\nimport Dashboard from \"./dashboard\";\r\n\r\n//create the sequence that we need. \"input midi\"\r\nvar drumRnn;\r\nvar drumPlayer;\r\nvar noteSet = new Set();\r\nvar temperature = 0.5;\r\nvar measures = 2;\r\n\r\n//when this is called, the active notes will be put into an array and constructed into a note sequence for the Rnn player.\r\nfunction buildNoteSequence()\r\n{\r\n    var notes = [];\r\n    var parsed;\r\n\r\n    for (let item of noteSet)\r\n    {\r\n        parsed = JSON.parse(item);\r\n        notes.push(parsed);\r\n    };\r\n\r\n    const drumSeq = {\r\n        notes,\r\n        quantizationInfo: {stepsPerQuarter: 4},\r\n        tempos: [{time: 0, qpm: 120}],\r\n        totalQuantizedSteps: 8\r\n    };\r\n\r\n    return drumSeq;\r\n}\r\n\r\n\r\nasync function initRnn()\r\n{\r\n\t//google's RNN, eventually we will use JAI's rnn from the backend.\r\n    drumRnn = new mag.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/drum_kit_rnn');\r\n    // Initialize the model.\r\n    await drumRnn.initialize();\r\n}\r\n\r\nexport default class compose extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //bind this function because we're gonna pass it to the individual buttons\r\n        this.testSound = this.testSound.bind(this);\r\n        this.changeTemperature = this.changeTemperature.bind(this);\r\n        this.changeMeasures = this.changeMeasures.bind(this);\r\n    }\r\n\r\n    //tests the sound of the drumkit button that is pressed.\r\n    testSound(e, msg, pitch, QTS, QTE, toggleState) {\r\n        e.preventDefault();\r\n\r\n        //the button has been pressed on if this is received as false, and it will go into our set which our user will submit to jai\r\n        if (toggleState === false) {\r\n            var noteJson = '{ \"pitch\" : ' + pitch + ',\"isDrum\" : ' + true + ', \"quantizedStartStep\" : ' + QTS + ',\"quantizedEndStep\" : ' + QTE + '}';\r\n\r\n            noteSet.add(noteJson);\r\n            console.log(noteSet.has(noteJson));\r\n\r\n             //0 to 1 QTS to QTE because we just want to test the sound when the button is clicked.\r\n             var drumSequence = {\r\n            notes: [\r\n                {pitch: pitch, quantizedStartStep: 0, quantizedEndStep: 1, isDrum: true},\r\n            ],\r\n            quantizationInfo: {stepsPerQuarter: 4},\r\n            tempos: [{time: 0, qpm: 120}],\r\n            totalQuantizedSteps: 1\r\n            };\r\n\r\n            drumPlayer.start(drumSequence);\r\n        }\r\n        //if the user toggles this off we need to purge what they entered before.\r\n        else {\r\n            //delete the string of the note that got untoggled.\r\n            var noteJson = '{ \"pitch\" : ' + pitch + ',\"isDrum\" : ' + true + ', \"quantizedStartStep\" : ' + QTS + ',\"quantizedEndStep\" : ' + QTE + '}';\r\n            noteSet.delete(noteJson);\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    //playback currently selected notes in order.\r\n    testNoteSequence() {\r\n        const drumSequence = buildNoteSequence();\r\n        drumPlayer.start(drumSequence);\r\n        const midi = mag.sequenceProtoToMidi(drumSequence);\r\n        console.log(midi);\r\n    }\r\n\r\n    jaiGenerate(e) {\r\n        e.preventDefault();\r\n        const drumSequence = buildNoteSequence();\r\n        const rnnPlayer = new mag.Player();\r\n        drumRnn.continueSequence(drumSequence, (16 * measures), temperature).then((sample) => rnnPlayer.start(sample));\r\n    }\r\n\r\n    //callback function for temp slider.\r\n    changeTemperature(e, value) {\r\n        e.preventDefault();\r\n        temperature = (value / 60);\r\n    }\r\n\r\n    changeMeasures(e, value)\r\n    {\r\n        e.preventDefault();\r\n        measures = value;\r\n    }\r\n\r\n        render() {\r\n\r\n        initRnn();\r\n        drumPlayer = new mag.Player();\r\n\r\n            //in theory this comes from the DB.\r\n            const drumNotes =\r\n                {\r\n                    notes: [\r\n                        { pitch: 41},\r\n                        { pitch: 42},\r\n                        { pitch: 43},\r\n                        { pitch: 44},\r\n                        { pitch: 45},\r\n                        { pitch: 46},\r\n                        { pitch: 47},\r\n                        { pitch: 48},\r\n                    ]\r\n                };\r\n\r\n        //then we put them into the button element.\r\n        const drumkit1 = <DrumKit pitch={drumNotes.notes[0].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit2 = <DrumKit pitch={drumNotes.notes[1].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit3 = <DrumKit pitch={drumNotes.notes[2].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit4 = <DrumKit pitch={drumNotes.notes[3].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit5 = <DrumKit pitch={drumNotes.notes[4].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit6 = <DrumKit pitch={drumNotes.notes[5].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit7 = <DrumKit pitch={drumNotes.notes[6].pitch} testCallback ={this.testSound}/>;\r\n        const drumkit8 = <DrumKit pitch={drumNotes.notes[7].pitch} testCallback ={this.testSound}/>;\r\n\r\n        const dash = <Dashboard tempCallback ={this.changeTemperature} measureCallback ={this.changeMeasures}/>;\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit1}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit2}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit3}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit4}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit5}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit6}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit7}\r\n                </div>\r\n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                    {drumkit8}\r\n                </div>\r\n                <p>Let's make some music!</p>\r\n                <div>{dash}</div>\r\n                <button onClick={this.testNoteSequence}>test sequence</button>\r\n                <button onClick={this.jaiGenerate}>Jai generate</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport 'whatwg-fetch';\r\n\r\nexport default class home extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div >\r\n                    <div className=\"jumbotron\" Style=\"background-color: #1C1616\">\r\n                        <h1 className=\"text-center\" Style=\"color: #4482BE\">Welcome to the JAI-Composer!</h1>\r\n                        <h2 className=\"text-center\" Style=\"color: #4482BE\">A Senior Design project sponsored by Dr. Richard Leinecker</h2>\r\n                    </div>\r\n                <div>\r\n                    <h2 className=\"text-center\" Style=\"color: #4482BE\">Our Vision</h2>\r\n                    <p className=\"text-center\"> The JAI-Composer is an AI that assists in creating\r\n                        electronic dance music. Our goal with the composer was to create a simple and accessible tool to help anyone create music, not just musicians. We started the development of the JAI-Composer with the goal of creating an\r\n                    Application that would help musicians and non-musicians in several ways.</p>\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"text-center\" Style=\"color: #4482BE\">Music Creation</h2>\r\n                    <p className=\"text-center\"> The JAI-Composer helps anyone create electronic music. Our Magenta powered drum model allows\r\n                    users to create a simple drum pattern, which is then given to the JAI-Composer. The JAI-Composer will then use machine learning to\r\n                    create a longer drum beat that was inspired by what the user created.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport 'whatwg-fetch';\r\nimport { setInStorage } from '../utils/storage';\r\n\r\nexport default class login extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state =\r\n        {\r\n            login_name: '',\r\n            login_password: '',\r\n            login_completed: false,\r\n            token: '',\r\n            signInError: ''\r\n        }\r\n\r\n        this.onChangeLoginname = this.onChangeLoginname.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    onChangeLoginname(e) {\r\n        this.setState({\r\n            login_name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            login_password: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        var email = this.state.login_name;\r\n        var password = this.state.login_password;\r\n\r\n        this.setState({\r\n\r\n                    login_name: '',\r\n                    login_password:'',\r\n                    signInError: '',\r\n        })\r\n\r\n        // Post request to backend\r\n        fetch('http://localhost:5000/api/account/signin', {\r\n            method: 'POST',\r\n            headers:\r\n            {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n              if (json.success)\r\n              {\r\n                  // Save the session token as a cookie in local storage\r\n                  setInStorage('JAIsessionToken', { token: json.token });\r\n\r\n                  // set the app component token to the new session token\r\n                  window.appComponent.state.token = json.token;\r\n\r\n                  // reset the states\r\n                  this.setState({\r\n                    signInError: json.message,\r\n                    isLoading: false,\r\n                    email: '',\r\n                    password: '',\r\n                    token: ''\r\n                });\r\n\r\n                window.appComponent.componentDidMount();\r\n                window.appComponent.render();\r\n\r\n                  // Redirect to the home component\r\n                  this.props.history.push('/');\r\n              }\r\n              else\r\n              {\r\n                  this.setState({\r\n                      signInError: json.message,\r\n                      isLoading: false\r\n                  });\r\n              }\r\n          });\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Login</h3>\r\n                { (this.state.signInError) ? (<p>{this.state.signInError}</p>) : (null) }\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.login_name}\r\n                                onChange={this.onChangeLoginname}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.login_password}\r\n                            onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","export function getFromStorage(key)\r\n{\r\n    if (!key)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    try\r\n    {\r\n        const valueStr = localStorage.getItem(key);\r\n        \r\n        if (valueStr)\r\n        {\r\n            return JSON.parse(valueStr);\r\n        }\r\n\r\n        return null;\r\n    }\r\n    catch (err)\r\n    {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj)\r\n{\r\n    if (!key)\r\n    {\r\n        console.error('Error: Key is missing');\r\n    }\r\n\r\n    try\r\n    {\r\n        localStorage.setItem(key, JSON.stringify(obj));\r\n    }\r\n    catch (err)\r\n    {\r\n        console.error(err);\r\n    }\r\n}","import React, { Component} from 'react';\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state =\r\n        {\r\n            email: '',\r\n            password:'',\r\n            isLoading: false,\r\n            signUpError: ''\r\n        }\r\n\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        \r\n        var email = this.state.email;\r\n        var password = this.state.password;\r\n\r\n        this.setState({\r\n\r\n                    email: '',\r\n                    password:'',\r\n                    signUpError: '',\r\n                    isLoading: true\r\n        });\r\n\r\n        // Post request to backend\r\n        fetch('http://localhost:5000/api/account/signup', {\r\n            method: 'POST',\r\n            headers:\r\n            {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n              if (json.success)\r\n              {\r\n                  this.setState({\r\n                      signUpError: json.message,\r\n                      isLoading: false,\r\n                      email: '',\r\n                      password: ''\r\n                  });\r\n              }\r\n              else\r\n              {\r\n                  this.setState({\r\n                      signUpError: json.message,\r\n                      isLoading: false\r\n                  });\r\n              }\r\n          });\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Register</h3>\r\n                { (this.state.signUpError) ? (<p>{this.state.signUpError}</p>) : (null) }\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value={!this.state.isLoading ? \"Register\" : \"Loading...\"} className=\"btn btn-danger\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nclass DrumNote extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick= this.handleClick.bind(this);\r\n        this.state = {bgColor: '#1C1616', toggle: false};\r\n    }\r\n\r\n    handleClick(e)\r\n    {\r\n        e.preventDefault();\r\n        const clickCallback = this.props.clickCallback;\r\n\r\n        //tickity toggle these buttons so we know which drums the users have chosen.\r\n        if(!this.state.toggle)\r\n        {\r\n            this.setState({bgColor: '#4482BE', toggle: true});\r\n        }\r\n        else\r\n        {\r\n            this.setState({bgColor: '#1C1616', toggle: false});\r\n        }\r\n\r\n        clickCallback(e,\"Reporting for duty sir!\",this.props.pitch, this.props.QTS, this.props.QTE, this.state.toggle);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"btn-group mr-2 mb-2\" role=\"group\" aria-label=\"First group\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleClick} data-toggle=\"button\" style={{backgroundColor:this.state.bgColor}}>drum pitch: {this.props.pitch}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumNote;","import React from 'react';\r\nimport DrumNote from './DrumNote';\r\n\r\nclass DrumKit extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //bind this function because we're gonna pass it to the individual buttons\r\n        this.handleNoteClick= this.handleNoteClick.bind(this);\r\n    }\r\n\r\n    handleNoteClick(e,msg, pitch, QTS, QTE, toggleState)\r\n    {\r\n        e.preventDefault();\r\n        const testCallback = this.props.testCallback;\r\n        testCallback(e,msg,pitch,QTS,QTE, toggleState);\r\n    }\r\n\r\n    render() {\r\n\r\n        const drum1 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {0} QTE = {1}/>;\r\n        const drum2 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {2} QTE = {3}/>;\r\n        const drum3 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {4} QTE = {5}/>;\r\n        const drum4 = <DrumNote pitch={this.props.pitch} clickCallback = {this.handleNoteClick} QTS = {6} QTE = {7}/>;\r\n\r\n\r\n        return(\r\n            <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                {drum1}\r\n                {drum2}\r\n                {drum3}\r\n                {drum4}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumKit;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\nconst styles = {\r\n    root: {\r\n        width: 300,\r\n    },\r\n    slider: {\r\n        padding: '22px 0px',\r\n    },\r\n};\r\n\r\nclass SimpleSlider extends React.Component {\r\n    state = {\r\n        value: 0.5,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n        const tempChange = this.props.temperatureCallback;\r\n       tempChange(event, value);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography id=\"label\">Temperature:</Typography>\r\n                <Slider\r\n                    classes={{ container: classes.slider }}\r\n                    value={value}\r\n                    aria-labelledby=\"label\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSimpleSlider.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleSlider);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit * 3,\r\n    },\r\n    group: {\r\n        margin: `${theme.spacing.unit}px 0`,\r\n    },\r\n});\r\n\r\nclass RadioButtonsGroup extends React.Component {\r\n    state = {\r\n        value: '2',\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ value: event.target.value });\r\n        const radioCallback = this.props.radioCallback;\r\n        radioCallback(event,event.target.value);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                    <FormLabel component=\"legend\">Generation playback length:</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"Gender\"\r\n                        name=\"gender1\"\r\n                        className={classes.group}\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <FormControlLabel value='2' control={<Radio />} label=\"2 Measures\" />\r\n                        <FormControlLabel value='4' control={<Radio />} label=\"4 Measures\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRadioButtonsGroup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RadioButtonsGroup);","import React from 'react';\r\nimport Slider from './simpleSlider';\r\nimport RadioButtonGroup from './RadioButtonsGroup';\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSlider = this.handleSlider.bind(this);\r\n        this.handleRadio = this.handleRadio.bind(this);\r\n    }\r\n\r\n    handleSlider(e, value)\r\n    {\r\n        e.preventDefault();\r\n        const sliderCallback = this.props.tempCallback;\r\n        sliderCallback(e, value);\r\n    }\r\n\r\n    handleRadio(e,value)\r\n    {\r\n        e.preventDefault();\r\n        const changeMeasure = this.props.measureCallback;\r\n        changeMeasure(e,value);\r\n    }\r\n\r\n    render() {\r\n\r\n        const TempSlide = <Slider temperatureCallback = {this.handleSlider}/>;\r\n        const Radio = <RadioButtonGroup radioCallback = {this.handleRadio}/>;\r\n        return(\r\n                <div>\r\n                    <div>{TempSlide}</div>\r\n                    <div>{Radio}</div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\nimport 'whatwg-fetch';\r\n\r\nimport {\r\n    getFromStorage,\r\n    setInStorage,\r\n} from './utils/storage';\r\n\r\nimport home from \"./components/home.component\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Compose from \"./components/compose.component\";\r\n\r\nexport default class App extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signUpError: '',\r\n            signInError: '',\r\n            masterError: ''\r\n        };\r\n\r\n        this.render = this.render.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        window.appComponent = this;\r\n    }\r\n\r\ncomponentDidMount()\r\n{\r\n    const obj = getFromStorage('JAIsessionToken');\r\n\r\n    if (obj && obj.token)\r\n    {\r\n        const { token } = obj;\r\n\r\n        // Verify token\r\n        fetch('http://localhost:5000/api/account/verify?token=' + token)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if (json.success)\r\n                {\r\n                    this.setState({\r\n                        token,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    else\r\n    {\r\n        this.setState({\r\n            isLoading: false,\r\n            token: '',\r\n        })\r\n    }\r\n}\r\n\r\nlogout()\r\n{\r\n\r\n}\r\n\r\nrender() \r\n{\r\n    const {\r\n        isLoading,\r\n        token\r\n    } = this.state;\r\n\r\n    if (isLoading)\r\n    {\r\n        return (<div><p>Loading...</p></div>);\r\n    }\r\n\r\n    var loggedInItems = (\r\n        <li className=\"navbar-item\" Style=\"color:#ffffff\">\r\n            <a class=\"nav-link disabled\" Style=\"color:#7f7f7f\" href=\"/\">         Logged in</a>\r\n        </li>\r\n    );\r\n\r\n    var signInAndUpItems = [(\r\n        <li className=\"navbar-item\">\r\n            <Link to=\"/login\" className=\"nav-link\" Style=\"color: #4482BE\">Login</Link>\r\n        </li>   \r\n    ), \r\n    (\r\n        <li className=\"navbar-item\">\r\n            <Link to=\"/register\" className=\"nav-link\" Style=\"color: #4482BE\">Register</Link>\r\n        </li>\r\n    )];    \r\n\r\n    // Changes what is shown to the user based on whether or not they are logged in\r\n    if (token)\r\n    {\r\n        return (\r\n            <Router>\r\n                <div className=\"container\">  \r\n                    <nav className=\"navbar navbar-expand-lg navbar-light navbar-custom\" height=\"400\" Style=\"background-color: #1c1716\">\r\n                    <a className=\"navbar-brand\" href=\"/\">\r\n                        <img src={window.location.origin + '/Images/square.png'} width=\"120\" height=\"120\" class=\"d-inline-block align-top\" alt=\"JAI Composer Logo\"/>\r\n                        <img src={window.location.origin + '/Images/JAI.png'} width=\"128\" height=\"128\" class=\"d-inline-block\" alt=\"JAI Composer Logo\"/>\r\n                        </a>                    \r\n                        <Link to=\"/\" className=\"navbar-left\">\r\n                        </Link>\r\n                        <div className=\"collpase navbar-collapse\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                                     \r\n                                <li className=\"navbar-item\">\r\n                                    <Link to=\"/compose\" className=\"nav-link\" Style=\"color: #4482BE\">Compose</Link>\r\n                                </li>\r\n                                    {loggedInItems}\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <br/>\r\n                    <Route path=\"/\" exact component={home} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/register\" component={Register} />\r\n                    <Route path=\"/compose\" component={Compose} />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <Router>\r\n                <div className=\"container\">  \r\n                    <nav className=\"navbar navbar-expand-lg navbar-light navbar-custom\" height=\"400\" Style=\"background-color: #1c1716\">\r\n                    <a className=\"navbar-brand\" href=\"/\">\r\n                        <img src={window.location.origin + '/Images/square.png'} width=\"120\" height=\"120\" class=\"d-inline-block align-top\" alt=\"JAI Composer Logo\"/>\r\n                        <img src={window.location.origin + '/Images/JAI.png'} width=\"128\" height=\"128\" class=\"d-inline-block\" alt=\"JAI Composer Logo\"/>\r\n                        </a>                    \r\n                        <Link to=\"/\" className=\"navbar-left\">\r\n                        </Link>\r\n                        <div className=\"collpase navbar-collapse\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                {signInAndUpItems}                        \r\n                                <li className=\"navbar-item\">\r\n                                    <Link to=\"/compose\" className=\"nav-link\" Style=\"color: #4482BE\">Compose</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <br/>\r\n                    <Route path=\"/\" exact component={home} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/register\" component={Register} />\r\n                    <Route path=\"/compose\" component={Compose} />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n    \r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}